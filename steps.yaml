steps:
  Preps:
    - Check Server States
    - Create a CR
    - Update the xCat Scripts
  Initial SMC.sh Steps:
    - 1a
    - 1b
    - \2
    - 2a
  PDU Sequencer:
    - PDUS Prep
    - Run PDUS
  Cable Check Sequencer:
    - CBCS Prep
    - Run CBCS
  Release Bundle:
    - RB Prep
    - Run RB
  SMC.sh Step 3's:
    - 3d
    - 3e
    - 3f
    - 3g
  GHV Prep:
    - Setup env vars
    - chdef username and password on server and BMC
    - Run 7
    - Run 11
    - Run 13
    - xdsh $SERVER -l root -o \"-o StrictHostKeyChecking=no\" uptime
    - Re-run 13
    - Run 19
    - Run 20
    - Run 20a
    - Run 20b
    - Run 20c
    - Run 20d
    - Run 20e

sub_step_descriptions:
  Check Server States: |
    Make sure that none of the servers are in Production state;
    https://9.114.87.41:8500/servers
    
  Create a CR: |
    Create a CR;
    https://watson.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D-1%26sysparm_catalog%3De0d08b13c3330100c8b837659bba8fb4%26sysparm_catalog_view%3Dcatalog_default%26sysparm_link_parent%3Db0fdfb01932002009ca87a75e57ffbe9%26sysparm_query%3Dtype%253dstandard%255estd_change_producer_version%253dddbf1a971b857110b2a3ddb9ec4bcb87%26sysparm_view%3Ddefault%26sysparm_view_forced%3Dtrue

  Update the xCat Scripts: |
    Update the xCat Scripts;
      mkdir -p ~/repos
      cd ~/repos
      rm -rf xCAT_Scripts
      git clone git@github.ibm.com:cloud-infrastructure/xCAT_Scripts.git

      ./xCAT_Scripts/install_scripts

  1a: |

  1b: |
    Delete the MTOR IP

  \2: |

  2a: |

  PDUS Prep: |
    cd /install/rfscripts
    source /install/rfscripts/creds_file_set_env_pw
    mkdir ~/.ssh/

  Run PDUS: |
    #./bringup_pdu_x.py {rack}-pdu-1,{rack}-pdu-2 --debug

  CBCS Prep: |
    vi /install/data {plain_rack}-info.yaml

  Run CBCS: |
    Full Rack;
      #./cable_check_x.py {sys} {plain_rack}-info.yaml --debug --dryrun
    Single Slot; 
      #./cable_check_x.py {rack}-s?? {plain_rack}-info.yaml --debug --env production 

  RB Prep: |
    #rm -rf ~/repos/system-bringup-release; mkdir ~/repos; git clone https://github.ibm.com/cloudlab/system-bringup-release.git ~/repos/system-bringup-release"
    vi ~/{plain_rack}.txt
    vi ~/bmc{plain_rack}.txt

  Run RB: |
    Full Rack;
      #./system-bringup.sh -s ~/{plain_rack}.txt -g bringup --tag {sys} --vault-overrides-file ~/bmc{plain_rack}.txt
    Single Slot;
      #./system-bringup.sh -s {rack}-s?? -g bringup --tag {sys} --vault-overrides-file ~/bmc{plain_rack}.txt
  
  RB Log: |
    tail -50 {Insert Log File Name}.out | sed -e 's/^[ \t]*//' > release-{plain_rack}-logs.txt; grep "FAILED" {Insert Log File Name}.out | sed -e 's/^[ \t]*//' | sort >> release-{plain_rack}-logs.txt

  Setup env vars: |
    export {mtor}
    export {tor}
    export {pdu}
    export {bmc}
    export {server}

  chdef username and password on server and BMC: |
    chdef {bmc},{server} bmcpassword=insert the password that shall not be named bmcusername=root

  Run 7: |

  Run 11: |

  Run 13: |
    After it fails for the first time,
      xdsh $SERVER -l root -o "-o StrictHostKeyChecking=no" uptime
      Re-run 13

  Run 19: |

  Run 20: |

  Run 20a: |

  Run 20b: |

  Run 20c: |

  Run 20d: |

  Run 20e: |

